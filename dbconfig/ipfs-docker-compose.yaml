# How to run this file in terminal
# docker-compose --project-name ipfs-network --file ipfs-docker-compose.yaml up
version: '3.4'

# This is an example docker-compose file to quickly test an IPFS Cluster
# with multiple peers on a contained environment.

# It runs 3 cluster peers (cluster0, cluster1...) attached to kubo daemons
# (ipfs0, ipfs1...) using the CRDT consensus component. Cluster peers
# autodiscover themselves using mDNS on the docker internal network.
#
# To interact with the cluster use "ipfs-cluster-ctl" (the cluster0 API port is
# exposed to the locahost. You can also "docker exec -ti cluster0 sh" and run
# it from the container. "ipfs-cluster-ctl peers ls" should show all 2 peers a few
# seconds after start.
# docker exec -ti cluster-hospital sh
# ipfs-cluster-ctl peers ls
# 
#
# For persistence, a "ipfs-network" folder is created and used to store configurations
# and states. This can be used to edit configurations in subsequent runs. It looks
# as follows:
#
# ipfs-network/
# |-- cluster0
# |-- cluster1
# |-- ...
# |-- ipfs0
# |-- ipfs1
# |-- ... 
#
# During the first start, default configurations are created for all peers.

services:

## Cluster Hospital
# NODE/PEERS
  ipfs-sardjito:
    container_name: ipfs-sardjito
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
    - "4001:4001" # ipfs swarm - expose if needed/wanted
    - "5001:5001" # ipfs api - expose if needed/wanted
    - "8080:8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./ipfs-network/ipfs-sardjito:/data/ipfs

  ipfs-rscm:
    container_name: ipfs-rscm
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./ipfs-network/ipfs-rscm:/data/ipfs
  
  ipfs-dharmais:
    container_name: ipfs-dharmais
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./ipfs-network/ipfs-dharmais:/data/ipfs
  
  ipfs-assyifa:
    container_name: ipfs-assyifa
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./ipfs-network/ipfs-assyifa:/data/ipfs
  
  ipfs-bethesda:
    container_name: ipfs-bethesda
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./ipfs-network/ipfs-bethesda:/data/ipfs
      
# PEER MANAGER
  cluster-hospital:
    container_name: cluster-hospital
    image: ipfs/ipfs-cluster:latest
    restart: always
    depends_on:
      - ipfs-sardjito
      - ipfs-rscm
      - ipfs-dharmais
      - ipfs-assyifa
      - ipfs-bethesda
    environment:
      CLUSTER_PEERNAME: cluster-hospital
      CLUSTER_SECRET: "a7d09e38b0c147f2a3584b42f1f1f4e4f87e7352e8ee4900cc0c2a32ee11a1cd" # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs-sardjito/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    ports:
          # Open API port (allows ipfs-cluster-ctl usage on host)
          - "127.0.0.1:9094:9094"
          # The cluster swarm port would need  to be exposed if this container
          # was to connect to cluster peers on other hosts.
          # But this is just a testing cluster.
          - "9095:9095" # Cluster IPFS Proxy endpoint
          - "9096:9096" # Cluster swarm endpoint
    volumes:
      - ./ipfs-network/cluster-hospital:/data/ipfs-cluster

## Cluster Insurance
# NODE/PEERS
  ipfs-prudential:
    container_name: ipfs-prudential
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
    - "4002:4001" # ipfs swarm - expose if needed/wanted
    - "5002:5001" # ipfs api - expose if needed/wanted
    - "8081:8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./ipfs-network/ipfs-prudential:/data/ipfs

  ipfs-manulife:
    container_name: ipfs-manulife
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./ipfs-network/ipfs-manulife:/data/ipfs

  ipfs-allianz:
    container_name: ipfs-allianz
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./ipfs-network/ipfs-allianz:/data/ipfs

  ipfs-jiwasraya:
    container_name: ipfs-jiwasraya
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./ipfs-network/ipfs-jiwasraya:/data/ipfs

  ipfs-bca-life:
    container_name: ipfs-bca-life
    image: ipfs/kubo:release
    deploy: 
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./ipfs-network/ipfs-bca-life:/data/ipfs

# PEER MANAGER
  cluster-insurance:
    container_name: cluster-insurance
    image: ipfs/ipfs-cluster:latest
    restart: always
    depends_on:
      - ipfs-prudential
      - ipfs-manulife
      - ipfs-allianz
      - ipfs-jiwasraya
      - ipfs-bca-life
    environment:
      CLUSTER_PEERNAME: cluster-insurance
      CLUSTER_SECRET: "a7d09e38b0c147f2a3584b42f1f1f4e4f87e7352e8ee4900cc0c2a32ee11a1cd"
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs-prudential/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    volumes:
      - ./ipfs-network/cluster-insurance:/data/ipfs-cluster 